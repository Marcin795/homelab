alertmanager:
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
          selector:
            matchLabels:
              app: alertmanager

grafana:
  service:
    type: LoadBalancer
    annotations:
      io.cilium/lb-ipam-ips: 192.168.1.230
  ingress:
    enabled: true
    annotations:
      external-dns.alpha.kubernetes.io/target: 192.168.1.222
      traefik.ingress.kubernetes.io/router.entrypoints: local
    hosts:
      - grafana.local.boomerok.dev
    tls:
      - secretName: local-tls
        hosts:
          - grafana.local.boomerok.dev
  persistence:
    enabled: true
    existingClaim: grafana-pvc
  additionalDataSources:
    - name: Loki
      type: loki
      access: proxy
      url: http://grafana-loki.observability:3100/

prometheus:
  prometheusSpec:
    logLevel: debug
    volumes:
#      - name: prometheus-os
#        hostPath:
#          path: /var/persistence/observability/prometheus
#          type: DirectoryOrCreate
      - name: prometheus-xfs
        hostPath:
          path: /var/disk/a/data/observability/prometheus2
          type: DirectoryOrCreate
      - name: prometheus-zfs
        hostPath:
          path: /var/mnt/data/persistence/observability/prometheus
          type: DirectoryOrCreate
    volumeMounts:
#      - mountPath: /prometheus-os
#        name: prometheus-os
      - mountPath: /prometheus-xfs
        name: prometheus-xfs
      - mountPath: /prometheus-zfs2
        name: prometheus-zfs
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
          selector:
            matchLabels:
              app: prometheus-os
