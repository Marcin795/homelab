apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpn-test
  namespace: arr
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: vpn-test
      app: vpn-test
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vpn-test
        app: vpn-test
    spec:
      containers:
        - name: python
          image: python
          ports:
            - containerPort: 9091
              name: transmission
          command:
            - /bin/bash
            - -c
#            - tail -f /dev/null
            - |
              apt-get update && \
              apt-get install -y nano zsh transmission transmission-daemon && \
              sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" && \
              transmission-daemon --foreground --log-debug -a '*' --auth --username user --password pass
      initContainers:
        - name: gluetun-updater
          image: qmcgaw/gluetun:v3.39.0
          command:
            - /bin/sh
            - -c
            - |
              /gluetun-entrypoint update -enduser -providers protonvpn
              cp /gluetun/servers.json /gluetun/updated_servers/servers.json
          volumeMounts:
            - name: gluetun-servers
              mountPath: /gluetun/updated_servers
        - name: dnsdist
          image: docker.io/powerdns/dnsdist-19:1.9.8
          restartPolicy: Always
          volumeMounts:
            - name: dnsdist
              mountPath: /etc/dnsdist/dnsdist.conf
              subPath: dnsdist.conf
        - name: gluetun
          image: qmcgaw/gluetun:v3.40.0
          restartPolicy: Always
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    cp /gluetun/auth/config-template.toml /gluetun/auth/config.toml;
                    sed -i "s|__API_KEY__|${GSP_GTN_API_KEY}|g" /gluetun/auth/config.toml;
                    (ip rule del table 51820; ip -6 rule del table 51820) || true;
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          env:
            - name: LOG_LEVEL
              value: debug
            ###################### REQUIRED ######################
            - name: DOT
              value: "off"
            - name: DNS_ADDRESS
              value: 127.0.0.2
            - name: VPN_SERVICE_PROVIDER
              value: protonvpn
            - name: VPN_TYPE
              value: wireguard
            - name: VPN_PORT_FORWARDING
              value: 'on'
            - name: PORT_FORWARD_ONLY
              value: 'on'
            - name: VPN_PORT_FORWARDING_PROVIDER
              value: protonvpn
            - name: FIREWALL_INPUT_PORTS
              value: '9091'
            - name: FIREWALL_OUTBOUND_SUBNETS
              value: 10.244.0.0/16,10.96.0.0/12
            - name: FIREWALL_DEBUG
              value: 'on'
            - name: SERVER_COUNTRIES
              value: Slovakia
            - name: WIREGUARD_ENDPOINT_IP
              value: 138.199.34.193
            - name: WIREGUARD_ADDRESSES
              value: 10.2.0.2/32
            - name: WIREGUARD_MTU
              value: '1200'
          envFrom:
            - secretRef:
                name: wireguard-secret
            - secretRef:
                name: gluetun-apikey
          volumeMounts:
            - name: gluetun-auth
              mountPath: /gluetun/auth/config-template.toml
              subPath: config-template.toml
            - name: gluetun-servers
              mountPath: /gluetun/servers.json
              subPath: servers.json
      volumes:
        - name: gluetun-servers
          emptyDir: { }
        - name: gluetun-auth
          configMap:
            name: gluetun-auth
        - name: dnsdist
          configMap:
            name: dnsdist
        - name: config
          hostPath:
            path: /var/mnt/data/persistence/arr/qbittorrent/config-test
            type: DirectoryOrCreate
        - name: downloads
          hostPath:
            path: /var/storage/media/downloads-test
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: vpn-test-service
  namespace: arr
  labels:
    app.kubernetes.io/name: vpn-test
    app: vpn-test
spec:
  ports:
    - port: 9091
      targetPort: transmission
      name: transmission
  selector:
    app.kubernetes.io/name: vpn-test
    app: vpn-test
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vpn-test-ingress
  namespace: arr
  annotations:
    external-dns.alpha.kubernetes.io/target: 192.168.8.222
    traefik.ingress.kubernetes.io/router.entrypoints: local
spec:
  ingressClassName: traefik
  rules:
    - host: test.local.boomerok.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: vpn-test-service
                port:
                  name: transmission
  tls:
    - secretName: local-tls
      hosts:
        - test.local.boomerok.dev
